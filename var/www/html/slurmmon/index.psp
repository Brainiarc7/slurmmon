<%
import time, re, json

conf = '/etc/slurmmon.conf'


#--- config

config = json.load(open(conf,'r'))

#hack for FASRC -- add "?cluster=dev" to the url to see status on the test cluster
if form.get('cluster', None)=='dev':
	config_gmetaurl = 'http://status.rc.fas.harvard.edu/ganglia/harvard_other'
	config_cluster = 'vm'
	config_host = 'slurm-test.rc.fas.harvard.edu'
else:
	#let these raise KeyError, since they're all required
	try:
		config_gmetaurl = config['config_gmetaurl']
		config_cluster  = config['config_cluster']
		config_host     = config['config_host']
	except, e:
		raise Exception("missing configuration from %s: %s" % (conf, e))


#--- helpers

RE_OK_INPUT = re.compile(r'^[a-zA-Z0-9\._\- ]*$')

def inputcheck(txt):
	if not RE_OK_INPUT.match(txt): raise Exception("failed input sanitization on [%s]" % repr(txt))
	return txt

def buildoptions(var):
	s = ''
	for option in possible[var]:
		s += '<option'
		if option==current[var]: s += ' selected="selected"'
		s += '>%s</option>' % option
	return s

def graphurl(name):
	return '%s/graph.php?g=%s&r=%s&z=%s"' % (config_gmetaurl, name, current['r'], current['z'])
	

#--- ganglia web vars

#see: http://sourceforge.net/apps/trac/ganglia/wiki/web_get_vars

possible = {}
default = {}
current = {}

#range
possible['r'] = ('hour', '2hr', '4hr', 'day', 'week', 'month', 'year')
default['r'] = 'hour'

#size
possible['z'] = ('small', 'medium', 'default', 'large', 'xlarge')
default['z'] = 'default'

current['r'] = inputcheck(form.get('r', default['r']))
current['z'] = inputcheck(form.get('z', default['z']))
current['c'] = config_cluster
current['h'] = config_host


#--- end indent
%>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<title>SLURM dashboard</title>
</head>
<body>


<p>
<form method="get">

<%
if form.get('cluster', None)=='dev':
	#begin indent
%>
	<input type="hidden" name="cluster" value="dev" />
<%
#end indent
%>

<table>
	<tr>
		<td>
			<strong>range</strong>:
			<select name="r" onchange="document.forms[0].submit();">
			<%= buildoptions('r') %>
			</select>
		</td>
		<td>
			<strong>size</strong>:
			<select name="z" onchange="document.forms[0].submit();">
			<%= buildoptions('z') %>
			</select>
		</td>
	</tr>
</table>
</form>
<p>


<h1>job counts</h1>
<p>
<table>
<tr>
	<td style="text-align:center;">
		<strong>overall live state</strong>
		<br />
		<img src="<%= graphurl('slurm_jobcount_total')%>" />
	</td>
	<td style="text-align:center;">
		<strong>dominant user(s)</strong>
		<br />
		<img src="<%= graphurl('slurm_jobcount_one_user')%>" />
	</td>
</tr>
<tr>
	<td style="text-align:center;">
		<strong>jobs counters since sdiag reset</strong>
		<br />
		<img src="<%= graphurl('slurm_sdiag_jobs')%>" />
	</td>
	<td style="text-align:center;">
		<strong>backfilled jobs since various restarts</strong>
		<br />
		<img src="<%= graphurl('slurm_sdiag_backfill_jobs')%>" />
	</td>
</tr>
</table>
</p>


<h1>job turnaround</h1>
<p>
<table>
<tr>
	<td style="text-align:center;">
		<strong>time a simple, short, high-priority job<br />spent pending in various queues</strong>
		<br />
		<img src="<%= graphurl('slurm_probejob_pendtime')%>" />
	</td>
</tr>
</table>

</p>


<h1>scheduler performance</h1>
<p>
<table>
<tr>
	<td style="text-align:center;">
		<strong>slurmctld threads and queue size</strong>
		<br />
		<img src="<%= graphurl('slurm_sdiag_procs')%>" />
	</td>
	<td style="text-align:center;">
		<strong>main scheduler cycle rate</strong>
		<br />
		<img src="<%= graphurl('slurm_sdiag_main_cycles_per_minute')%>" />
	</td>
</tr>
</table>

<br />
<br />

<table  style="background-color:#cccccc;">
<%
for sched in (None, 'main', 'backfill'):
	req.write('<tr><td style="text-align:right;">')
	if sched is not None:
		req.write('<strong><span style="font-size:larger;">%s</span></strong>:' % sched)
	req.write('</td>')
	for graph, description in (
		('times' , 'time spent in scheduling cycle'),
		('cycles', 'number of scheduling cycles since sdiag reset'),
		('depths', 'scheduling attempt depths'),
		):
		req.write('<td style="text-align:center;">')
		if sched is None:
			req.write('<strong>%s</strong>' % description)
		else:
			req.write('<img src="%s" />' % graphurl('slurm_sdiag_%s_%s' % (sched, graph)))
		req.write('</td>')
	req.write('</td>')
#end indent
%>
</table>
</p>


<p>
<small>page generated:&nbsp;<%= time.ctime() %></small>
</p>

</body>
</html>
